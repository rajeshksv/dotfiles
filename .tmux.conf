# Works in tmux 3.2

# Tweaks for Mac OS. Not needed in other OS

# Some commands doesn't work in tmux due to a bug. 
# Run brew install reattach-to-user-namespace for this to work or comment it out. 
set-option -g default-command "reattach-to-user-namespace -l zsh"

# General config

set-option -g history-limit 4000

# Change window name to current dir
# be sure to see note* below
#set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
#set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'

# status bar updates every 15s by default**, change to 1s here 
# (this step is optional - a lower latency might have negative battery/cpu usage impacts)
#set -g status-interval 1

# Scroll up down using mouse
set-option -g mouse on

# Set C-a instead of default C-b
#unbind C-b
#set-option -g prefix C-q
#bind-key C-q send-prefix
#bind-key C-q last-window

# Quick reload using r
bind-key r source ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1
# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# Split screen using | and -
bind v split-window -h 
bind x split-window -v
bind V split-window -h -c '#{pane_current_path}' 
bind X split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# Switch to last window using C-b C-b
unbind L
bind-key L last-window

# Shift + arrow key to switch between windows
# bind -n S-Left  previous-window
# bind -n S-Right next-window


# Set new window default directory
bind-key c new-window -n 'Flipkart' -c ~/Flipkart
#unbind i
#bind-key i copy-mode-vi

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up

set -g default-terminal "screen-256color"
set -g status-bg colour240
set -g status-fg white
#set-window-option -g window-status-current-bg colour91


bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U

# Highlight active pane
#set-option -g pane-active-border-fg blue

# Synchronize panes
unbind s
bind s set synchronize-panes off
unbind S
bind S set synchronize-panes on

# Maintiain numbering between windows.
# Renumber other windows when a window is closed
set-option -g renumber-windows on

# Rather than moving pane to different window, hide it. Use !, @, %
bind-key ! break-pane -d -n _hidden_pane
bind-key @ join-pane -hs $.1
bind-key % join-pane -vs $.1

# pane movement - Take panes from user and join/send to another window
# Usage Prefix + j + :1
# [session]:window.pane
# If session, pane are not given, then its default session/window/pane. 
# Hence during send, use break-pane -d 
# Join pane to current window i.e., :1 or :2
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# A session is a single collection of pseudo terminals under the management of tmux.  
# Each session has one or more windows linked to it.  
# A window occupies the entire screen and may be split into rectangular panes
# C-b ? help
# Panes
  # Move around panes using C-b and Left/Right/Up/Down arrows
  # C-b j/k to move between panes. o to move to all panes
  # C-b q num to switch to pane directly
  # C-b ; between panes
  # Maximize/Minimize panes using C-b z
  # C-b space to make horizontal split to vertical and viceversa
  # To resize panes, C-b Alt+Up/Down arrows. Press continous Alt+Up/Down for more resize
  # To hide a pane, go to pane and do ctrl B !. To get it back, use ctrl B % or ctrl B @ (Based on horizontal/vertical splits)
  # To hide a pane, go to pane and break-pane -dP. It gives you a id. Note it and press q/Enter to hide
  # To get it back, go to pane where you want to get it, do join-pane -v/hs id. id is session:window.pane
  # Move pane to window, window to pane ?
  # Swap panes, { }
  # join-pane and break-pane to convert pane to split
  # join-pane -bdhv -s :source -t :dest. How to join and where to join
  # :killp - Kill pane
  # Restart a pane - respawn-pane -k
# Windows
  # C-b w to show/display/list windows
  # C-b n/p for going to next/previous windoes
  # C-b L for toggling between latest windows 
  # C-b, rename window
  # C-b & kill window
# Misc
# C-b [ to enter copy mode. Now press / and type string to search for. (similar to vi bindings)
# Hold option and double click to select a word in tmux
# To copy text in copy mode, hit space and then select text and press enter. V to select line
# Enter : to enter into command line
# C-b #, = to list, use all paste buffers
# History Up arrow works

# Install tmux-cssh for parallel logging into many servers similar to tmux
# set synchronize-panes off/on using s/S 

# In case of tmux - bind C-s set-window-option synchronize-panes
# For more info - https://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window
# Identifier session:window.pane

# Break pane
# Breaks the current pane to a new window
# break-pane -d 

# Join pane
# Let my pane Join window 1 - Send pane to 1
# join-pane -t :1

# Join a pane from a given source to here
# join-pane -s :1.2
# join-pane -h -s ! # Join the most recently window

# You can use h/v to decide how to join the pane horizontally or vertically

# Reload tmux config file
# source-file ~/.tmux.conf // From tmux prompt
# tmux source-file ~/.tmux.conf // From shell

# Tmux rename window
# tmux rename-window -t${TMUX_PANE} "Title Text"
# tmux rename-window "Title" // For current window

# Within tmux conf, you can poll some command and set title. Useful in setting title to current directory 
# set-option -g status-interval 5 // Polling interval
# set-option -g automatic-rename on
# set-option -g automatic-rename-format '#{b:pane_current_path}' 

# In case you want to rename to ssh hostname, define ssh function in shell ~/.bashrc or ~/.zshrc
# https://gist.github.com/florianbeer/ee02c149a7e25f643491

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Plugins
set -g @plugin "arcticicestudio/nord-tmux"

# A Tmux plugin manager https://github.com/tmux-plugins/tpm
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

